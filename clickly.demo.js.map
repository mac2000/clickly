{"version":3,"sources":["webpack:///clickly.demo.js","webpack:///webpack/bootstrap c28768072654e72521d6","webpack:///./src/demo.js","webpack:///./src/utils.js"],"names":["clickly","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","run","viewId","undefined","_utils","console","log","gapi","client","request","path","root","method","body","reportRequests","pageSize","dateRanges","startDate","dateToAnalyticsFormat","dateDaysAgo","endDate","metrics","expression","dimensions","then","response","window","html","result","reports","data","rows","map","row","date","dateFromAnalyticsFormat","toDateString","pageviews","parseInt","values","item","join","demo","hidden","querySelector","innerHTML","error","bind","addDays","days","Date","setDate","getDate","toISOString","split","shift","str","replace"],"mappings":"AAAA,GAAIA,SAAUA,WAAeA,SAAc,KAClC,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4DA,OAhCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,KDMO,CAED,SAAUtB,EAAQD,EAASH,GAEjC,YAGAc,QAAOC,eAAeZ,EAAS,cAC3BwB,OAAO,IAEXxB,EAAQyB,IAAMzB,EAAQ0B,WAASC,EE7E/B,IAAAC,GAAA/B,EAAA,EAEAgC,SAAQC,IAAI,qBAEL,IAAMJ,YAAS,WAETD,OAAM,WACfM,KAAKC,OAAOC,SACRC,KAAM,uBACNC,KAAM,6CACNC,OAAQ,OACRC,MACIC,iBACIC,SAAU,IACVb,SACAc,aACIC,WAAW,EAAAb,EAAAc,wBAAsB,EAAAd,EAAAe,cAAa,IAC9CC,SAAS,EAAAhB,EAAAc,wBAAsB,EAAAd,EAAAe,cAAa,MAEhDE,UACIC,WAAY,iBAEhBC,aACIvC,KAAM,iBAIfwC,KAAK,SAAAC,GACJC,OAAOD,SAAWA,CAClB,IAAME,GAAOF,EAASG,OAAOC,QAAQ,GAAGC,KAAKC,KACxCC,IAAI,SAAAC,GAAA,OACDC,MAAM,EAAA9B,EAAA+B,yBAAwBF,EAAIV,WAAW,IAAIa,eACjDC,UAAWC,SAASL,EAAIZ,QAAQ,GAAGkB,OAAO,OAE7CP,IAAI,SAAAQ,GAAA,iBAAmBA,EAAKN,KAAxB,YAAwCM,EAAKH,UAA7C,cACJI,KAAK,GACVC,MAAKC,QAAS,EACdD,KAAKE,cAAc,SAASC,UAAYlB,GACzCtB,QAAQyC,MAAMC,KAAK1C,YF4HxB,SAAU5B,EAAQD,EAASH,GAEjC,YAGAc,QAAOC,eAAeZ,EAAS,cAC3BwB,OAAO,GGxKJ,IAAMgD,aAAU,SAACd,EAAMe,GAC1B,GAAMrB,GAAS,GAAIsB,MAAKhB,EAExB,OADAN,GAAOuB,QAAQvB,EAAOwB,UAAYH,GAC3BrB,EAGET,eAAc,SAAA8B,GAAA,MAAQD,GAAQ,GAAIE,MAAQD,IAE1C/B,wBAAwB,SAAAgB,GAAA,MAAQA,GAAKmB,cAAcC,MAAM,KAAKC,SAE9DpB,0BAA0B,SAAAqB,GAAA,MAAO,IAAIN,MAAKM,EAAIC,QAAQ,wBAAyB","file":"clickly.demo.js","sourcesContent":["var clickly = clickly || {}; clickly[\"demo\"] =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */,\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.run = exports.viewId = undefined;\n\nvar _utils = __webpack_require__(2);\n\nconsole.log('Hello from demo.js');\n\nvar viewId = exports.viewId = '160451249';\n\nvar run = exports.run = function run() {\n    gapi.client.request({\n        path: '/v4/reports:batchGet',\n        root: 'https://analyticsreporting.googleapis.com/',\n        method: 'POST',\n        body: {\n            reportRequests: [{\n                pageSize: 10000,\n                viewId: viewId,\n                dateRanges: [{\n                    startDate: (0, _utils.dateToAnalyticsFormat)((0, _utils.dateDaysAgo)(-7)),\n                    endDate: (0, _utils.dateToAnalyticsFormat)((0, _utils.dateDaysAgo)(-1))\n                }],\n                metrics: [{\n                    expression: 'ga:pageviews'\n                }],\n                dimensions: [{\n                    name: 'ga:date'\n                }]\n            }]\n        }\n    }).then(function (response) {\n        window.response = response;\n        var html = response.result.reports[0].data.rows.map(function (row) {\n            return {\n                date: (0, _utils.dateFromAnalyticsFormat)(row.dimensions[0]).toDateString(),\n                pageviews: parseInt(row.metrics[0].values[0])\n            };\n        }).map(function (item) {\n            return '<tr><td>' + item.date + '</td><td>' + item.pageviews + '</td><tr>';\n        }).join('');\n        demo.hidden = false;\n        demo.querySelector('tbody').innerHTML = html;\n    }, console.error.bind(console));\n\n    // gapi.client.request({\n    //     path: '/v4/reports:batchGet',\n    //     root: 'https://analyticsreporting.googleapis.com/',\n    //     method: 'POST',\n    //     body: {\n    //         reportRequests: [\n    //         {\n    //             pageSize: 10000,\n    //             viewId: VIEW_ID,\n    //             dateRanges: [\n    //             {\n    //                 startDate: '2017-10-13',\n    //                 endDate: '2017-10-13'\n    //             }\n    //             ],\n    //             metrics: [\n    //             {\n    //                 expression: 'ga:totalEvents'\n    //             }\n    //             ],\n    //             dimensions: [\n    //                 {\n    //                     name: 'ga:eventCategory'\n    //                 },\n    //                 {\n    //                     name: 'ga:eventAction'\n    //                 },\n    //                 {\n    //                     name: 'ga:dimension1'\n    //                 },\n    //                 {\n    //                     name: 'ga:dimension2'\n    //                 }\n    //             ]\n    //         }\n    //         ]\n    //     }\n    //     }).then(displayResults, console.error.bind(console));\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar addDays = exports.addDays = function addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n};\n\nvar dateDaysAgo = exports.dateDaysAgo = function dateDaysAgo(days) {\n    return addDays(new Date(), days);\n};\n\nvar dateToAnalyticsFormat = exports.dateToAnalyticsFormat = function dateToAnalyticsFormat(date) {\n    return date.toISOString().split('T').shift();\n};\n\nvar dateFromAnalyticsFormat = exports.dateFromAnalyticsFormat = function dateFromAnalyticsFormat(str) {\n    return new Date(str.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1-$2-$3'));\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// clickly.demo.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c28768072654e72521d6","import {dateDaysAgo, dateToAnalyticsFormat, dateFromAnalyticsFormat} from './utils'\n\nconsole.log('Hello from demo.js')\n\nexport const viewId = '160451249'\n\nexport const run = () => {\n    gapi.client.request({\n        path: '/v4/reports:batchGet',\n        root: 'https://analyticsreporting.googleapis.com/',\n        method: 'POST',\n        body: {\n            reportRequests: [{\n                pageSize: 10000,\n                viewId,\n                dateRanges: [{\n                    startDate: dateToAnalyticsFormat(dateDaysAgo(-7)),\n                    endDate: dateToAnalyticsFormat(dateDaysAgo(-1))\n                }],\n                metrics: [{\n                    expression: 'ga:pageviews'\n                }],\n                dimensions: [{\n                    name: 'ga:date'\n                }]\n            }]\n        }\n        }).then(response => {\n            window.response = response\n            const html = response.result.reports[0].data.rows\n                .map(row => ({\n                    date: dateFromAnalyticsFormat(row.dimensions[0]).toDateString(),\n                    pageviews: parseInt(row.metrics[0].values[0])\n                }))\n                .map(item => `<tr><td>${item.date}</td><td>${item.pageviews}</td><tr>`)\n                .join('')\n            demo.hidden = false\n            demo.querySelector('tbody').innerHTML = html\n        }, console.error.bind(console))\n\n    // gapi.client.request({\n    //     path: '/v4/reports:batchGet',\n    //     root: 'https://analyticsreporting.googleapis.com/',\n    //     method: 'POST',\n    //     body: {\n    //         reportRequests: [\n    //         {\n    //             pageSize: 10000,\n    //             viewId: VIEW_ID,\n    //             dateRanges: [\n    //             {\n    //                 startDate: '2017-10-13',\n    //                 endDate: '2017-10-13'\n    //             }\n    //             ],\n    //             metrics: [\n    //             {\n    //                 expression: 'ga:totalEvents'\n    //             }\n    //             ],\n    //             dimensions: [\n    //                 {\n    //                     name: 'ga:eventCategory'\n    //                 },\n    //                 {\n    //                     name: 'ga:eventAction'\n    //                 },\n    //                 {\n    //                     name: 'ga:dimension1'\n    //                 },\n    //                 {\n    //                     name: 'ga:dimension2'\n    //                 }\n    //             ]\n    //         }\n    //         ]\n    //     }\n    //     }).then(displayResults, console.error.bind(console));\n}\n\n\n// WEBPACK FOOTER //\n// ./src/demo.js","export const addDays = (date, days) => {\n    const result = new Date(date)\n    result.setDate(result.getDate() + days)\n    return result\n}\n\nexport const dateDaysAgo = days => addDays(new Date(), days)\n\nexport const dateToAnalyticsFormat = date => date.toISOString().split('T').shift()\n\nexport const dateFromAnalyticsFormat = str => new Date(str.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1-$2-$3'))\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}